[tool.poetry]
name = "neo-smart-chat-api"
version = "1.4.1"
description = "neoAI Chat API"
authors = []
packages = [{ include = "api" }]

[tool.poetry.dependencies]
python = "^3.10"
azure-identity = "1.16.0"
openai = { version = "^1.51.2", extras = ["embeddings"] }
azure-search-documents = "11.4.0"
azure-storage-blob = "12.14.1"
azure-storage-queue = "12.7.1"
azure-ai-formrecognizer = "3.3.0"
pypdf = "^5.1.0"
pdfplumber = "^0.10.3"
tiktoken = "^0.8.0"
pyjwt = "2.8.0"
sqlalchemy = "^2.0.27"
sqlalchemy-utils = "^0.41.1"
psycopg2 = "2.9.6"
marshmallow = "3.20.1"
auth0-python = "3.24.1"
python-dotenv = "1.0.0"
email-validator = "2.0.0"
pycryptodome = "^3.20.0"
pydantic = "2.4.2"
pytz = "^2023.3.post1"
opencensus-ext-azure = "1.1.9"
tenacity = "8.2.3"
typing-extensions = "^4.12.2"
injector = "0.21.0"
types-requests = "2.31.0"
pandas = { extras = ["excel", "html"], version = "^2.2.3" }
jaconv = "0.3.4"
mojimoji = "0.0.12"
launchdarkly-server-sdk = "9.1.0"
alembic = "1.12.1"
pandas-stubs = "^2.1.4.231227"
python-docx = "1.1.0"
python-pptx = "0.6.23"
azure-cognitiveservices-vision-computervision = "^0.9.0"
beautifulsoup4 = ">=4.11.1"
types-beautifulsoup4 = "4.12.0.20240229"
types-python-dateutil = "^2.9.0.20240316"
neollm = { git = "https://github.com/neoAI-inc/neo-llm-module.git", rev = "v1.3.24" }
sentry-sdk = { extras = ["fastapi"], version = "^2.13.0" }
pypandoc = "^1.13"
tabulate = "^0.9.0"
gevent = "^24.10.2"
openpyxl = "^3.1.5"
psutil = "^5.9"
azure-monitor-opentelemetry = "^1.6.2"
pillow = "^11.0.0"
markdown = "^3.7"
msgraph-sdk = "^1.14.0"
croniter = "^6.0.0"
types-croniter = "^5.0.1.20241205"
httpx = "^0.27.2"
timeout-decorator = "^0.5.0"
fastapi = { extras = ["standard"], version = "^0.115.6" }
uvicorn = { extras = ["standard"], version = "^0.34.0" }
box-sdk-gen = { extras = ["jwt"], version = "^1.9.0" }


[tool.poetry.group.dev.dependencies]
mypy = "^1.8.0"
pytest = "7.4.3"
watchdog = "^4.0.1"
types-psycopg2 = "^2.9.21.20241019"
ruff = "^0.8.1"
types-psutil = "^6.1.0.20241102"
types-pyyaml = "^6.0.12.20241230"
openapi-spec-validator = "^0.7.1"
pre-commit = "^4.0.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 119
exclude = [
  ".git",
  ".hg",
  ".mypy_cache",
  ".tox",
  ".venv",
  "_build",
  "buck-out",
  "build",
  "dist",
  "backend_env",
]

[tool.ruff.lint]
# TODO: select = ["ALL"] にして、いらないやつだけ ignore に入れるようにしたい
select = ["E", "F", "W", "C", "B", "T", "R", "RUF"]
ignore = [
  "E203",   # whitespace-before-punctuation
  "E501",   # line-too-long
  "C901",   # complex-structure (want to add)
  "B017",   # assert-raises-exception
  "B904",   # raise-without-from-inside-except
  "T201",   # print (want to add)
  "RUF001", # ambiguous-unicode-character-string
  "RUF002", # ambiguous-unicode-character-docstring
  "RUF003", # ambiguous-unicode-character-comment
  "RET504", # superfluous-else-break (want to add)
]

[tool.ruff.lint.extend-per-file-ignores]
"api/app.py" = ["E402"]
"api/commands/init_app.py" = ["E402"]
"api/jobs/jobs.py" = ["E402"]
"api/migrations/env.py" = ["E402"]
"scripts/polling.py" = ["E402"]
"tests/conftest.py" = ["E402"]

[tool.ruff.lint.isort]
combine-as-imports = true
force-sort-within-sections = true
force-wrap-aliases = true

[tool.mypy]
namespace_packages = true
explicit_package_bases = true
exclude = '''
 api/commands/ursa
'''

[[tool.mypy.overrides]]
module = [
  "auth0.*",
  "opencensus.*",
  "neollm.*",
  "azure.cognitiveservices.vision.computervision.*",
  "docx.*",
  "openpyxl.*",
  "pptx.*",
  "email_validator.*",
  "sqlalchemy_utils.*",
  "google.auth.*",
  "pypandoc.*",
  "grpc.*",
  "markdown.*",
  "msgraph.*",
  "timeout_decorator.*",
  "box_sdk_gen.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
python_files = ["test_*.py", "*_test.py"]
testpaths = ["tests"]
