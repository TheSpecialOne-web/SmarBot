name: "Frontend: Deploy"

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      env:
        type: string
        required: true

permissions:
  id-token: write
  contents: read
  pull-requests: read

defaults:
  run:
    working-directory: frontend

jobs:
  setup:
    runs-on: ubuntu-latest
    timeout-minutes: 1

    outputs:
      env: ${{ steps.set-env.outputs.env }}

    steps:
      - uses: actions/checkout@v4

      - name: Set env
        id: set-env
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "env=dev" >> $GITHUB_OUTPUT
          else
            echo "env=${{ inputs.env }}" >> $GITHUB_OUTPUT
          fi

  deploy:
    needs: setup

    environment: ${{ needs.setup.outputs.env }}
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v4

      - name: az login
        uses: Azure/login@v2.1.1
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      - name: Make .env
        run: cp -f ./env/${{ needs.setup.outputs.env }} ./.env

      - name: Set secrets
        run: sed -i "s/VITE_SENTRY_AUTH_TOKEN=.*/VITE_SENTRY_AUTH_TOKEN=\"${{ secrets.SENTRY_AUTH_TOKEN }}\"/" .env

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: frontend/package.json

      - name: Install dependencies
        run: npm install

      - name: Generate schema
        run: npm run orval

      - name: Build
        run: npm run build

      - name: Retreive Azure Static Web Apps API Token
        id: get-azure-static-web-apps-api-token
        run: |
          API_TOKEN=$(az staticwebapp secrets list --name ${{ vars.AZURE_STATIC_WEB_APPS_NAME }} | jq -r '.properties.apiKey')
          echo "::add-mask::$API_TOKEN"
          echo "token=$API_TOKEN" >> $GITHUB_OUTPUT

      - name: Deploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ steps.get-azure-static-web-apps-api-token.outputs.token }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: upload
          app_location: frontend/dist
          skip_app_build: true
          skip_api_build: true
