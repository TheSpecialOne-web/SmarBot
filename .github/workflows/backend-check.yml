name: "Backend: Check"

on:
  pull_request:
    paths:
      - "backend/**"
      - ".github/workflows/backend-check.yml"

env:
  PYTHONPATH: ${{ github.workspace }}/backend
  MYPYPATH: ${{ github.workspace }}/backend
  DB_USER: postgres
  DB_PASSWORD: postgres
  DB_HOST: localhost
  AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
  AZURE_BATCH_STORAGE_QUEUE_CONNECTION_STRING: DefaultEndpointsProtocol=http;AccountName=stbatchlocal;AccountKey=c3RiYXRjaGxvY2Fsa2V5;QueueEndpoint=http://localhost:10001/stbatchlocal;

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    working-directory: backend

jobs:
  check:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: ${{ env.DB_USER }}
          POSTGRES_PASSWORD: ${{ env.DB_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      azurite:
        image: mcr.microsoft.com/azure-storage/azurite
        ports:
          - 10000:10000
          - 10001:10001
        options: >-
          --name azurite
          --env AZURITE_ACCOUNTS="devstoreaccount1:Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;stbloblocal:c3RibG9ibG9jYWw=;stpubliclocal:c3RwdWJsaWNsb2NhbGtleQ==;stbatchlocal:c3RiYXRjaGxvY2Fsa2V5"
          --env AZURITE_HTTPS_ONLY=false

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Generate GitHub Access Token
        id: generate-token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.NEOLLM_INSTALLER_APP_ID }}
          private_key: ${{ secrets.NEOLLM_INSTALLER_PRIVATE_KEY }}

      - name: Install Python dependencies
        run: |
          git config --global url."https://x-access-token:${{ steps.generate-token.outputs.token }}@github.com/".insteadOf "https://github.com/"
          pip install -U pip
          pip install poetry
          poetry config virtualenvs.create false
          poetry install --no-root

      - name: Run lint
        run: make lint EXEC="poetry run"

      - name: Run pytest
        run: make test EXEC="poetry run"
        env:
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          AES_KEY: ${{ secrets.AES_KEY }}
          EXTERNAL_DATA_AES_KEY: ${{ secrets.EXTERNAL_DATA_AES_KEY }}
          AZURE_BATCH_STORAGE_QUEUE_CONNECTION_STRING: ${{ env.AZURE_BATCH_STORAGE_QUEUE_CONNECTION_STRING }}
